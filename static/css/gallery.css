#prev,
#next {
  position: absolute;
  top: 50%;
  z-index: 10;
  border-radius: 15px;
  border: none;
  color: #777;
  font-weight: bolder;
  background-color: white;
  -webkit-box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);
          box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);
}

#prev:focus,
#next:focus {
  outline: none;
}

#prev {
  left: 0px;
}

#next {
  right: 0px;
}

.w {
  width: 90vmin;
  height: 80vmin;
}

.ts {
  width: 100%;
  height: 100%;
  position: relative;
  --barH: 10%;
  /*active zone height = 100% - barH*/
}

.t {
  --w: 20%;
  display: block;
  width: var(--w);
  height: var(--barH);
  position: absolute;
  bottom: 0;
  left: var(--l);
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.t img {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  border-radius: 15px;
  -webkit-transform: scale(0.8);
          transform: scale(0.8);
}

[type="radio"] {
  display: none;
}

:checked + label.t {
  left: 0;
  bottom: var(--barH);
  height: calc(100% - var(--barH));
}

:checked + label.t img {
  -o-object-fit: contain;
     object-fit: contain;
}

/* 
optional
*/
.ts {
  /*thumbnails bar*/
  -webkit-perspective: 100px;
          perspective: 100px;
  -webkit-perspective-origin: center center;
          perspective-origin: center center;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  pointer-events: none;
}

.ts:after {
  /*the plate*/
  content: "";
  display: block;
  width: 100%;
  height: 15px;
  position: absolute;
  bottom: 0;
  background: -webkit-gradient(linear, left top, left bottom, color-stop(20%, transparent), to(rgba(0, 0, 0, 0.1)));
  background: linear-gradient(transparent 20%, rgba(0, 0, 0, 0.1));
  -webkit-transform: rotateX(90deg) scaleX(1.2);
          transform: rotateX(90deg) scaleX(1.2);
  -webkit-transform-origin: bottom center;
          transform-origin: bottom center;
}

:not(:checked) + .t {
  /*inactive labels*/
  -webkit-transform: translate3d(0, 0, -5px);
          transform: translate3d(0, 0, -5px);
  pointer-events: auto;
}

:not(:checked) + .t:hover {
  -webkit-transform: translate3d(0, -7px, -5px);
          transform: translate3d(0, -7px, -5px);
  -webkit-box-shadow: 0 30px 30px -25px rgba(0, 0, 0, 0.3);
          box-shadow: 0 30px 30px -25px rgba(0, 0, 0, 0.3);
  cursor: pointer;
}

:not(:checked) + .t img {
  -webkit-transform: scale(0.9);
          transform: scale(0.9);
  /*create gaps*/
  -webkit-box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3);
          box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3);
}

:checked + .t {
  /*active label*/
  -webkit-box-shadow: 0 0 0 transparent;
          box-shadow: 0 0 0 transparent;
  -webkit-animation: anim 2s 1;
          animation: anim 2s 1;
}

@-webkit-keyframes anim {
  from {
    -webkit-transform: rotateY(6deg) rotateX(3deg);
            transform: rotateY(6deg) rotateX(3deg);
  }
}

@keyframes anim {
  from {
    -webkit-transform: rotateY(6deg) rotateX(3deg);
            transform: rotateY(6deg) rotateX(3deg);
  }
}

/* 
transitions
*/
.t {
  /*active->inactive & hover->rest*/
  -webkit-transition: bottom 0.6s, left 0.6s, width 0.3s, -webkit-transform 0.5s, -webkit-box-shadow 1s;
  transition: bottom 0.6s, left 0.6s, width 0.3s, -webkit-transform 0.5s, -webkit-box-shadow 1s;
  transition: transform 0.5s, bottom 0.6s, left 0.6s, width 0.3s, box-shadow 1s;
  transition: transform 0.5s, bottom 0.6s, left 0.6s, width 0.3s, box-shadow 1s, -webkit-transform 0.5s, -webkit-box-shadow 1s;
}

.t:hover,
:checked + .t {
  -webkit-transition: bottom 0.6s, left 0.6s, width 0.3s, -webkit-transform 0.5s, -webkit-box-shadow 0s;
  transition: bottom 0.6s, left 0.6s, width 0.3s, -webkit-transform 0.5s, -webkit-box-shadow 0s;
  transition: transform 0.5s, bottom 0.6s, left 0.6s, width 0.3s, box-shadow 0s;
  transition: transform 0.5s, bottom 0.6s, left 0.6s, width 0.3s, box-shadow 0s, -webkit-transform 0.5s, -webkit-box-shadow 0s;
}
/*# sourceMappingURL=gallery.css.map */